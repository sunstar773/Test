<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:task="http://www.springframework.org/schema/task" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
      
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/aop  
 http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
    <!--开启springMVC的注解模式 -->
    <mvc:annotation-driven />
    <!--对web包中的所有类进行扫描   -->
    <context:component-scan base-package="com.fh.controller" />
    <context:component-scan base-package="com.fh.exception" />

	<task:annotation-driven />

  <!--  静态文件访问,主要是让DispatcherServlet不拦截以下静态资源 -->
					<mvc:resources location="/commons/" mapping="/commons/**"/>
	                  <mvc:resources location="/js/" mapping="/js/**"/>

					 <!-- 视图解析器 -->
					<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
						<property name="prefix" value="/WEB-INF/view/" />
						<property name="suffix" value=".jsp" />
					</bean>

					    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600000" />
		<property name="maxInMemorySize" value="4096" />
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>

	<mvc:interceptors>

		<mvc:interceptor>
			<!--  拦截所有请求  -->
			<mvc:mapping path="/**" />
			<!-- 排除那些请求不被拦截 -->
			<mvc:exclude-mapping path="/loginController/**"/>
			<mvc:exclude-mapping path="/commons/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/toFindPassword/**"/>
			<mvc:exclude-mapping path="/sendPassword/**"/>
			<mvc:exclude-mapping path="/findUserByEmail/**"/>
			<!-- 拦截器的实现类，里边定义是自定义的拦截规则 -->
			<bean class="com.fh.interceptor.myInterceptor"/>
		</mvc:interceptor>
       <!--权限拦截器-->
		<mvc:interceptor>
			<!--  拦截所有请求  -->
			<mvc:mapping path="/**" />
			<!-- 排除那些请求不被拦截 -->
			<mvc:exclude-mapping path="/loginController/**"/>
			<mvc:exclude-mapping path="/commons/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/toFindPassword/**"/>
			<mvc:exclude-mapping path="/sendPassword/**"/>
			<mvc:exclude-mapping path="/findUserByEmail/**"/>
			<!-- 拦截器的实现类，里边定义是自定义的拦截规则 -->
			<bean class="com.fh.interceptor.menuInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="logAspect" class="com.fh.aspect.LogAspect"></bean>
	<aop:config>
		<aop:aspect ref="logAspect">
			<aop:pointcut id="logPointCut" expression="execution(* com.fh.controller..*.add*(..))||execution(* com.fh.controller..*.up*(..))||execution(* com.fh.controller..*.del*(..))"></aop:pointcut>
			<aop:around method="doLog" pointcut-ref="logPointCut"></aop:around>
		</aop:aspect>
	</aop:config>



</beans>


 